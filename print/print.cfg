#####################################
#            Print Macros           #
#      Version 2.2.0 2023-1-27      #
#####################################

################################
######### START_PRINT ##########
################################
[gcode_macro START_PRINT]
gcode:
    {% set defaultcfg = printer['gcode_macro _defaultcfg'] %} ; get default variables
    {% set printcfg = printer['gcode_macro _printcfg'] %} ; get print variables
    {% set cachevar = printer['gcode_macro _cachevar'] %} ; get cache variables
    SET_GCODE_VARIABLE MACRO=_cachevar VARIABLE=starting_print VALUE=True
    # Define positioning system
    G90 ; use absolute coordinates
    M83 ; extruder relative mode
    # Preheat bed surface
    _HEAT_SURFACE
    # Preheat/soak chamber
    _PREP_CHAMBER
    # Prepare fans
    _PREP_FANS
    # Prepare bed suface
    _PREP_SURFACE
    {% if defaultcfg.heat_soak_complete == False %}
        # Pause without parking
        PAUSE_BASE
    {% else %}
        # Wait for chamber preheat to finalize
        _FINALIZE_ENVIRO
    {% endif %}

################################
######### HEAT_SURFACE #########
################################
[gcode_macro _HEAT_SURFACE]
gcode:
    {% set defaultcfg = printer['gcode_macro _defaultcfg'] %} ; get defaultcfg variables
    {% set printcfg = printer['gcode_macro _printcfg'] %} ; get print variables
    # Preheat bed
    {% if printcfg.bed_temp > 0 %}
        {% if defaultcfg.notify_led_status == True %}
            {defaultcfg.notify_led_status_heat} ; LED feedback
        {% endif %}
        {% if defaultcfg.extruder_pretemp > 0 %}
            M{defaultcfg.notify_output} Warming extruder ; status feedback
            SET_HEATER_TEMPERATURE HEATER=extruder TARGET={defaultcfg.extruder_pretemp} ; allow partial nozzle warmup
        {% endif %}
        M{defaultcfg.notify_output} Preheating bed ; status feedback
        SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={printcfg.bed_temp}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={printcfg.bed_temp-1} MAXIMUM={printcfg.bed_temp+5}
    {% endif %}

################################
######### PREP_CHAMBER #########
################################
[gcode_macro _PREP_CHAMBER]
gcode:
    {% set defaultcfg = printer['gcode_macro _defaultcfg'] %} ; get defaultcfg variables
    {% set printcfg = printer['gcode_macro _printcfg'] %} ; get print variables
    {% if printcfg.chamber_temp != 0 %}
        M{defaultcfg.notify_output} Preheating chamber ; status feedback
        {% if defaultcfg.notify_led_status == True %}
            {defaultcfg.notify_led_status_heat} ; LED feedback
        {% endif %}
        {% if defaultcfg.chamber_type == 'temperature_fan' %}
            SET_TEMPERATURE_FAN_TARGET temperature_fan={defaultcfg.chamber_name} target={printcfg.chamber_temp}
        {% elif defaultcfg.chamber_type == 'heater_generic' %}
            SET_HEATER_TEMPERATURE HEATER={defaultcfg.chamber_name} TARGET={printcfg.chamber_temp}
        {% endif %}
        {% if defaultcfg.heat_soak == True %}
            SET_GCODE_VARIABLE MACRO=_defaultcfg VARIABLE=heat_soak_complete VALUE=False
            HEAT_SOAK
        {% endif %}
    {% endif %}

################################
########## PREP_FANS ###########
################################
[gcode_macro _PREP_FANS]
gcode:
    {% set defaultcfg = printer['gcode_macro _defaultcfg'] %} ; get defaultcfg variables
    {% set printcfg = printer['gcode_macro _printcfg'] %} ; get print variables
    # Set controller fan
    {% if defaultcfg.controller_fan == True %}
        {defaultcfg.controller_fan_start}
    {% endif %}
    # Set part-cooling fan (off)
    M107
    # Set nevermore/filter fan
    {% if printcfg.nevermore_speed > 0 %}
        SET_FAN_SPEED FAN={printcfg.nevermore_name} SPEED={printcfg.nevermore_speed}
    {% endif %}

################################
######### PREP_SURFACE #########
################################
[gcode_macro PREP_SURFACE]
gcode:
    # Homing/undock probe
    HOME_IF_NEEDED
    # Z-tilt or QGL
    BED_LEVEL
    # Bed mesh
    BED_MESH_PRINT

################################
####### FINALIZE_ENVIRO ########
################################
[gcode_macro _FINALIZE_ENVIRO]
gcode:
    {% set defaultcfg = printer['gcode_macro _defaultcfg'] %} ; get default variables
    {% set printcfg = printer['gcode_macro _printcfg'] %} ; get print variables
    {% set cachevar = printer['gcode_macro _cachevar'] %} ; get cache variables
    # Preheat hotend
    _PREP_EXTRUDER
    _SET_Z_OFFSET
    # Status notifications
    {% if defaultcfg.notify_audio_status == True %}
        {defaultcfg.notify_start_audio} ; audio feedback
    {% endif %}
    SET_GCODE_VARIABLE MACRO=_cachevar VARIABLE=starting_print VALUE=False ; complete print_start process
    M{defaultcfg.notify_output} Print Started ; status feedback
    {% if defaultcfg.notify_led_status == True %}
      {defaultcfg.notify_led_status_printing} ; LED feedback
    {% endif %}

################################
######## PREP_EXTRUDER #########
################################
[gcode_macro _PREP_EXTRUDER]
gcode:
    {% set defaultcfg = printer['gcode_macro _defaultcfg'] %} ; get default variables
    {% set printcfg = printer['gcode_macro _printcfg'] %} ; get print variables
    {% set cachevar = printer['gcode_macro _cachevar'] %} ; get cache variables
    {% set extrudertemp = printcfg.extruder_temp|float %}
    {% if defaultcfg.auto_filsensor == True %}
        # Turn on Filament Sensor
        ENABLEFILAMENTSENSOR
    {% endif %}
    # Begin heating extruder hotend
    M{defaultcfg.notify_output} Heating tool to Print Temperature ; status feedback
    {% if defaultcfg.notify_led_status == True %}
        {defaultcfg.notify_status_heat} ; LED feedback
    {% endif %}
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={extrudertemp} ; set final nozzle temp
    # Park for preheating
    HEATING_PARK
    # Wait for heating to complete
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={extrudertemp} MAXIMUM={extrudertemp +1}; wait for nozzle temp to stabilize
    # Extruder configuration
    G21 ; set units to millimeters
    G90 ; use absolute coordinates
    M82 ; use absolute distances for extrusion
    PURGE_PRINT
    G92 E0 ; reset extrusion distance
