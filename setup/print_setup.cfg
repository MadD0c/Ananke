[gcode_macro SET_PRINT]
gcode:
    #Get Bed, Extruder, and Chamber temperatures from Slicer GCode
    {% set BED_TEMP = params.BED|default(printcfg.bed_temp)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER|default(printcfg.extruder_temp)|float %}
    {% set CHAMBER_TEMP = params.CHAMBER|default(printcfg.chamber_temp)|float %}

    # Get Number of Layers
    {% set NUM_LAYERS = params.COUNT|default(printcfg.layer_count)|float %}
    {% set CUR_LAYER = params.NUM|default(printcfg.layer_num)|float + 1 %}
    #Get Nozzle diameter and filament width for conditioning
    {% set NOZZLE = printer.extruder.nozzle_diameter|default(0.4)|float %}
    {% set FILADIA = printer.extruder.filament_diameter|default(1.75)|float %}
    # Get Number of Tool Changes Required
    {% set TOOL_CHANGES = params.TOOLS|default(printcfg.tool_count)|float %}
    {% set CUR_TOOL = params.CUR_TOOL|default(1)|float %}
     # Use Smart Filament Sensor
    {% set SFS = params.SFS|default(1)|int %}

    
    #SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=x_max VALUE={X_MAX}
    #SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=y_max VALUE={Y_MAX}
    #SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=z_max VALUE={Z_MAX}

    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=nozzle VALUE={NOZZLE}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=fila_dia VALUE={FILADIA}

    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=filament VALUE="'{MATERIAL}'"
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=colour VALUE="'{COLOUR}'"

    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=bed_temp VALUE={BED_TEMP}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=extruder_temp VALUE={EXTRUDER_TEMP}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=chamber_temp VALUE={CHAMBER_TEMP}

    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=cur_layer VALUE={CUR_LAYER}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=num_layers VALUE={NUM_LAYERS}

    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=tool_changes VALUE={TOOL_CHANGES}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=cur_tool VALUE={CUR_TOOL}

    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=print_min_x VALUE={print_min_x}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=print_min_y VALUE={print_min_y}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=print_max_x VALUE={print_max_x}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=print_max_y VALUE={print_max_y}

    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=sequential_print VALUE={SEQUENTIAL}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=sequence_num VALUE={SEQUENCE_NUM + 1}

    #SET_GCODE_VARIABLE MACRO=SCRUBBER VARIABLE=scrub VALUE={SCRUB}
    #SET_GCODE_VARIABLE MACRO=SCRUBBER VARIABLE=scrub_time VALUE={SCRUB_TIME}
    #SAVE_VARIABLE VARIABLE=scrub_time VALUE={SCRUB_TIME}

    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=sfs VALUE={SFS}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=dehumid VALUE={DEHUMID}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=filter VALUE={FILTER}

    #{% set MATERIAL = params.MATERIAL|default('PLA')|string %}
    #SAVE_VARIABLE VARIABLE=last_material VALUE="'{MATERIAL}'"
    #SET_MATERIAL MATERIAL={MATERIAL}
    
    CLEAR_ZHOP

[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : False ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 0.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 0.0   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 1.0   ; the value to retract while PAUSE
variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
variable_speed_retract    : 35.0  ; retract speed in mm/s
variable_unretract        : 1.0   ; the value to unretract while RESUME
variable_speed_unretract  : 35.0  ; unretract speed in mm/s
variable_speed_hop        : 15.0  ; z move speed in mm/s
variable_speed_move       : 100.0 ; move speed in mm/s
variable_park_at_cancel   : False ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
variable_use_fw_retract  : False ; use fw_retraction instead of the manual version [True/False]
gcode:
