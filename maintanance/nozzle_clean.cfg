################################
######### CLEAN_NOZZLE #########
################################
[gcode_macro CLEAN_NOZZLE]
gcode:
      {% set defaultcfg = printer['gcode_macro _defaultcfg'] %} ; get defaultcfg variables
      {% set config = printer.configfile.settings %} ; get realtime configfile settings
      {% set cachevar = printer["gcode_macro _cachevar"] %}
      {% if defaultcfg.cleaning == True %}
            # First, Home all axis.
            HOME_IF_NEEDED
            STATUS_CLEAN_START
            ## Set to absolute positioning.
            G90
            ## Grab max position of Y-axis from config to use in setting a fixed y position for location_bucket_rear = True.
            {% set Ry = config["stepper_y"]["position_max"]|float %}
      
            ## Check if user enabled purge option or not.
            {% if defaultcfg.enable_purge == True %}
      
               ### Randomly select left or right bin for purge. 0 = left, 1 = right
               SET_GCODE_VARIABLE MACRO=_cachevar VARIABLE=bucket_pos VALUE={(range(2) | random)}
      
               ### Raise Z for travel.
               G1 Z{defaultcfg.brush_top + defaultcfg.clearance_z} F{defaultcfg.prep_spd_z}
      
               ### Check if user chose to use rear location.
               {% if location_bucket_rear %}
                  G1 Y{Ry} F{defaultcfg.prep_spd_xy}
               {% else %}
                  G1 Y{defaultcfg.brush_front + (defaultcfg.brush_depth / 2)} F{defaultcfg.prep_spd_xy}
               {% endif %}
      
               ### Position for purge. Randomly selects middle of left or right bucket. It references from the middle of the left bucket.
               G1 X{defaultcfg.bucket_start + (defaultcfg.bucket_left_width / (2 - defaultcfg.bucket_pos)) + (defaultcfg.bucket_pos * defaultcfg.bucket_gap) + (defaultcfg.bucket_pos * (defaultcfg.bucket_right_width / 2))}
      
               ### Perform purge if the temp is up to min temp. If not, it will skip and continue executing rest of macro. Small retract after
               ### purging to minimize any persistent oozing at 5x purge_spd. G4 dwell is in milliseconds, hence * 1000 in formula.
               {% if printer.extruder.temperature >= defaultcfg.purge_temp_min %}
                  M83      ; relative mode
                  G1 E{defaultcfg.purge_len} F{defaultcfg.purge_spd}
                  G1 E-{defaultcfg.purge_ret} F{defaultcfg.purge_spd * 5}
                  G4 P{defaultcfg.ooze_dwell * 1000}
                  G92 E0   ; reset extruder
               {% endif %}
            {% endif %}
         
            ## Position for wipe. Either left or right of brush based off bucket_pos to avoid unnecessary travel.
            G1 Z{defaultcfg.brush_top + defaultcfg.clearance_z} F{defaultcfg.prep_spd_z}
            G1 X{defaultcfg.brush_start + (defaultcfg.brush_width * defaultcfg.bucket_pos)} F{defaultcfg.prep_spd_xy}
      
            ## Check if user chose to use rear location.
            {% if defaultcfg.location_bucket_rear == True %}
               G1 Y{Ry}
            {% else %}
               G1 Y{defaultcfg.brush_front + (defaultcfg.brush_depth / 2)}
            {% endif %}
      
            ## Move nozzle down into brush.
            G1 Z{defaultcfg.brush_top} F{defaultcfg.prep_spd_z}
         
            ## Perform wipe. Wipe direction based off bucket_pos for cool random scrubby routine.
            {% for wipes in range(1, (defaultcfg.wipe_qty + 1)) %}
               G1 X{defaultcfg.brush_start + (defaultcfg.brush_width * (1 - defaultcfg.bucket_pos))} F{defaultcfg.wipe_spd_xy}
               G1 X{defaultcfg.brush_start + (defaultcfg.brush_width * bdefaultcfg.ucket_pos)} F{defaultcfg.wipe_spd_xy}
            {% endfor %}
            ## Clear from area.
            M{defaultcfg.notify_output} Nozzel Cleaned!
            G1 Z{defaultcfg.brush_top + defaultcfg.clearance_z} F{defaultcfg.prep_spd_z}
            G1 X{defaultcfg.bucket_start + (defaultcfg.bucket_left_width / 4)} F{defaultcfg.prep_spd_xy} #bugfix for right side mounted buckets
            STATUS_CLEAN_END
      {% endif %}
