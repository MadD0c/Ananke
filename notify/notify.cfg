[gcode_macro _KNOMI_STATUS]
variable_homing: False
variable_probing: False
variable_qgling: False
variable_heating_nozzle: False
variable_heating_bed: False
gcode:


################################
######## AUDIO ALERTS###########
################################
# Audio alert macros
[delayed_gcode alert_beeper]
gcode:
    {% set defaultcfg = printer['gcode_macro _defaultcfg'] %} ; get defaultcfg variables
    {defaultcfg.notify_m600_audio} ; Play alert tone
    UPDATE_DELAYED_GCODE ID=alert_beeper DURATION={defaultcfg.notify_alert_freq|int}
# Start the alert beep cycle
[gcode_macro ALERT_BEEP_ON]
gcode:
    UPDATE_DELAYED_GCODE ID=alert_beeper DURATION=1
# Stop the alert beep cycle
[gcode_macro ALERT_BEEP_OFF]
gcode:
    UPDATE_DELAYED_GCODE ID=alert_beeper DURATION=0

    [delayed_gcode alert_beeper]
    gcode:
        change_tune
        UPDATE_DELAYED_GCODE ID=alert_beeper DURATION=5
    
    [gcode_macro ALERT_BEEP_ON]
    gcode:
        UPDATE_DELAYED_GCODE ID=alert_beeper DURATION=1
    
    [gcode_macro ALERT_BEEP_OFF]
    gcode:
        UPDATE_DELAYED_GCODE ID=alert_beeper DURATION=0
        
# Used for beep tones
[gcode_macro M300]
gcode:
    {% set S = params.S|default(1000)|int %} ; S sets the tone frequency
    {% set P = params.P|default(100)|int %} ; P sets the tone duration
    {% set L = 0.5 %} ; L varies the PWM on time, close to 0 or 1 the tone gets a bit quieter. 0.5 is a symmetric waveform
    {% if S <= 0 %} ; dont divide through zero
        {% set F = 1 %}
        {% set L = 0 %}
    {% elif S >= 10000 %} ;max frequency set to 10kHz
        {% set F = 0 %}
    {% else %}
        {% set F = 1/S %} ;convert frequency to seconds
    {% endif %}
    SET_PIN PIN=_beeper VALUE={L} CYCLE_TIME={F} ;Play tone
    G4 P{P} ;tone duration
    SET_PIN PIN=_beeper VALUE=0

## Sub componet Macros ##

[gcode_macro KNOMI]
gcode:
  {% set defaultcfg = printer['gcode_macro _defaultcfg'] %} ; get defaultcfg variables
  {% set function = params.FUNCTION %}
  {% set value = params.VALUE %}
  {% if defaultcfg.notify_knomi == True %}
    {% if defaultcfg.notify_knomi_version == 1 %}
      {% if function == homming %}
         SET_GCODE_VARIABLE MACRO=G28 VARIABLE=homing VALUE={value}
      {% else %}
        {% if function == probing %}
           SET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probing VALUE={value}
        {% endif %}
      {% endif %}
    {% else %}
      SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE={function} VALUE={value}
    {% endif %}
  {% endif %}

[gcode_macro LED]
gcode:
  {% set defaultcfg = printer['gcode_macro _defaultcfg'] %} ; get defaultcfg variables
  {% if defaultcfg.notify_led == True %}
       
  {% endif %}

[gcode_macro DISPLAY]
gcode:
  {% set defaultcfg = printer['gcode_macro _defaultcfg'] %} ; get defaultcfg variables
  {% set status = params.STATUS %}
  {% set msg = params.MESSAGE %}
  {% if defaultcfg.notify_display == True %}
      {% if status == error %}
         {defaultcfg.notify_display_error_output} {msg}
      {% else %}
        {% if status == silent %}
           {defaultcfg.notify_display_silent_output} {msg}
        {% else %}
          {defaultcfg.notify_display_output} {msg}
        {% endif %}
      {% endif %}   
  {% endif %}

[gcode_macro AUDIO]
gcode:
  {% set defaultcfg = printer['gcode_macro _defaultcfg'] %} ; get defaultcfg variables
  {% set tone = params.TONE %}
  {% if defaultcfg.notify_audio == True %}
       {% if tone == start %}
        {defaultcfg.notify_audio_start}
       {% else %}
         {% if tone == end %}
          {defaultcfg.notify_audio_start}
         {% else %}
           {% if tone == error %}
             {defaultcfg.notify_audio_start}
           {% else %}
             {% if tone == finish %}
               {defaultcfg.notify_audio_start}
             {% else %}
            {% endif %}
			  {% if tone == level %}
                 {defaultcfg.notify_audio_start}
              {% else %}
                 {% if tone == clean %}
                   {defaultcfg.notify_audio_start}
                 {% else %}
                   {% if tone == change %}
                     {defaultcfg.notify_audio_start}
                   {% else %}
                     {% if tone == end %}
                       {defaultcfg.notify_audio_start}
                     {% else %}
                       {% if tone == none %}
                       {% else %}
                         {tone}
					             {% endif %}
					           {% endif %}
				           {% endif %}
                 {% endif %}
              {% endif %}
           {% endif %}
         {% endif %}
       {% endif %}
  {% endif %}

[gcode_macro MESSAGE]
gcode:
  {% set defaultcfg = printer['gcode_macro _defaultcfg'] %}
  {% set defaultsrv = defaultcfg.notify.message.service %} ; get defaultcfg variables
  {% set srv = params.SERVICE %}
  {% set msg = params.MESSAGE %}
  {% if defaultcfg.notify_message == True %}
    {% if srv == Mobileraker %}

    {% else %}
      NOTIFY SERVICE={srv} MESSAGE={msg}
    {% endif %}
  {% endif %}

[gcode_macro NOTIFY]
gcode:
    {% set service = params.SERVICE %}
    {% set message = params.MESSAGE %}
    {% set image = params.IMAGE|default(false) %}
    {% if service is defined %}
        {% if message is defined %}
            {% if image == True %}
              { action_call_remote_method("notify", name="{service}_screenshot", message="{message}") }
            {% else %}
              { action_call_remote_method("notify", name="{service}", message="{message}") }
            {% endif %}
        {% endif %}
    {% else %}
        { action_raise_error("Please provide Service Name and Message") }
    {% endif %}

#[gcode_macro NOTIFY_MOBILERAKER]
#description: Allows you to send a custom notification via Mobileraker without using the M117 command
#gcode:
#    {% set msg = "MR_NOTIFY:" ~ (params.TITLE ~ "|" if 'TITLE' in params|upper else "") ~ params.MESSAGE %}
#
#    {% if 'MESSAGE' in params|upper %}
#        { action_respond_info(msg) }
#    {% else %}
#        { action_raise_error('Must provide MESSAGE parameter') }
#    {% endif %}
