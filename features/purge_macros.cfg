################################
######## PURGE_MACROS ########
################################
[gcode_macro PURGE_PRINT]
description: A purge macro that adapts to be near your actual printed objects
gcode:
    {% set defaultcfg = printer['gcode_macro _defaultcfg'] %} ; get defaultcfg variables
    {% if defaultcfg.purging == True %}
        {% if defaultcfg.notify_led_status == True %}
          {defaultcfg.notify_led_status_clean} ; LED feedback
        {% endif %}
        {% if defaultcfg.notify_audio_status == True %}
           {defaultcfg.notify_clean_audio} ; purge nozzle
        {% endif %}
        #M{defaultcfg.notify_output} Purging Nozzle ; status feedback
        {% if defaultcfg.purge_kamp == True %}
            #M118 KAMP goes here
            {defaultcfg.purge_kamp_type}_PURGE
        {% else %}
          PURGE_LINE
        {% endif %} 
    {% endif %}


[gcode_macro PURGE_LINE]
gcode:
    {% set defaultcfg = printer['gcode_macro _defaultcfg'] %} ; get defaultcfg variables
    {% set x_origin = defaultcfg.purge_x_start | float %}
    {% set size = defaultcfg.purge_size | float %}
    {% set y_origin = defaultcfg.purge_y_start | float %}
    {% set purge_amount = defaultcfg.purge_amount | float %}
    {% set purge_travel_speed = defaultcfg.purge_travel_speed | float %}
    {% set purge_z_height = defaultcfg.purge_z_height | float %}
    {% set purge_size = defaultcfg.purge_size | float %}
    {% set purge_move_speed = defaultcfg.purge_move_speed %}
    {% set purge_line_number = defaultcfg.purge_line_number %}	
    {% set purge_direction = defaultcfg.purge_direction %}	
    {% set n = (purge_line_number - 1) %}
    M{defaultcfg.notify_output} Purging Nozzle ; status feedback
    G92 E0
	{% set purge_loop_even = False %}
    {% if purge_direction == x %}
        {% set x_max = (x_origin + purge_size) %}
		{% for i in range(n) %}
	   		{% if purge_loop_even == True %}
				G1 E-.5 F2100  
				G0 F{purge_travel_speed}                                                                                          
				G0 X{x_max} Y{y_origin + (purge_size*i)}
				G0 Z{purge_z_height}
				G1 E.5 F2100 
				G1 X{x_origin} E{purge_amount * (i+1)} F{purge_move_speed} Y{y_origin + (purge_size*i)}
				G1 E-.5 F2100    
				G0 Z{purge_z_height*2}
				{% set purge_loop_even = False %}
	    	{% else %}
				G1 E-.5 F2100  
				G0 F{purge_travel_speed} 
				G0 X{x_origin} Y{y_origin + (purge_size*i)}
				G0 Z{purge_z_height} 
				G1 E.5 F2100 
				G1 X{x_max} E{purge_amount * (i+1)} F{purge_move_speed} Y{y_origin + (purge_size*i)}
				G1 E-.5 F2100  
				G0 Z{purge_z_height*2}
				{% set purge_loop_even = True %}
	    	{% endif %}
		{% endfor %}
		G0 Z{purge_z_height}
		G1 E.5 F2100
		{% if printer.toolhead.position.x == x_max %}
			G0 X{x_origin} Y{y_origin + (purge_size*n)} 
		{% else %}
			G0 X{x_max} Y{y_origin + (purge_size*n)} 	
		{% endif %}
	{% else %}
        {% set y_max = (y_origin + purge_size) %}
		{% for i in range(n) %}
		{% if purge_loop_even == True %}
				G1 E-.5 F2100  
				G0 F{purge_travel_speed} 
				G0 X{x_origin + (purge_size*i)} Y{y_max} 
				G0 Z{purge_z_height} 
				G1 E.5 F2100 
				G1 X{x_origin + (purge_size*i)} E{purge_amount * (i+1)} F{purge_move_speed} Y{y_origin} 
				G1 E-.5 F2100 
				G0 Z{purge_z_height*2} 
		{% else %}
				G1 E-.5 F2100  
				G0 F{purge_travel_speed} 
				G0 X{x_origin + (purge_size*i)} Y{y_origin} 
				G0 Z{purge_z_height}
				G1 E.5 F2100 
				G1 X{x_origin + (purge_size*i)} E{purge_amount * (i+1)} F{purge_move_speed} Y{y_max}
				G1 E-.5 F2100 
				G0 Z{purge_z_height*2} 
		{% endif %}
		{% endfor %}
		G0 Z{purge_z_height}
		G1 E.5 F2100
		{% if printer.toolhead.position.y == y_max %}
			G0 X{x_origin + (purge_size*n)} Y{Y_origin} 
		{% else %}
			G0 X{x_origin + (purge_size*n)} Y{Y_max} 	
		{% endif %}
	{% endif %}
 	G0 Z{purge_z_height*2}
