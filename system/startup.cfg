  {% set optionscfg = printer["gcode_macro _optionscfg"] %}
  {% set defaultcfg = printer["gcode_macro _defaultcfg"] %}

  # Force overrides to use the original types in _KM_GLOBALS.
  {% for k in optionscfg %}
    {% if k not in defaultcfg %}
      {% if k in warn_removed %}
        {action_respond_info(warn_removed[k])}
      {% else %}
        {% set dummy = output.append("%s is not valid for optionscfg." |
                         format(k)) %}
      {% endif %}
    {% elif defaultcfg[k] is string %}
      SET_GCODE_VARIABLE MACRO=defaultcfg VARIABLE={k
        } VALUE="'{optionscfg[k]|replace('\\','\\\\')|replace('\'','\\\'')
                             |replace('\"','\\\"')}'"
    {% elif defaultcfg[k] is float %}
      SET_GCODE_VARIABLE MACRO=defaultcfg VARIABLE={k
        } VALUE="{optionscfg[k]|float}"
    {% elif defaultcfg[k] is integer or defaultcfg[k] is boolean %}
      SET_GCODE_VARIABLE MACRO=defaultcfg VARIABLE={k} VALUE="{optionscfg[k]|int}"
    {% elif defaultcfg[k] is mapping %}
      {% if optionscfg[k] is not mapping %}
        {% set dummy = output.append("%s requires a mapping type." |
                         format(k)) %}
      {% endif %}
      SET_GCODE_VARIABLE MACRO=defaultcfg VARIABLE={k
        } VALUE="{options[k]|replace('\"','\\\"')}"
    {% elif defaultcfg[k] is sequence %}
