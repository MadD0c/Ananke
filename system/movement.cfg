
################################
########### PARKING ############
################################
# Used to park the toolhead for filament changes
[gcode_macro _FILAMENT_PARK]
gcode:
    {% set defaultcfg = printer['gcode_macro _defaultcfg'] %} ; get defaultcfg variables
    {% set config = printer.configfile.settings %} ; get realtime configfile settings
	M{defaultcfg.output|int} Parking toolhead...
	SET_GCODE_VARIABLE MACRO=_defaultcfg VARIABLE=prev_temp VALUE={printer.extruder.target}
    G91
	{% if printer.toolhead.position.z|float + defaultcfg.park_z|float < config["stepper_z"]["position_max"]|float %}
		{% if  printer.toolhead.position.z < defaultcfg.park_zmin|int %}
            G1 Z{defaultcfg.park_zmin|int-printer.toolhead.position.z|int}
		{% else %}
            SAVE_GCODE_STATE NAME=save_state
            G1 Z{defaultcfg.park_z|int}
            RESTORE_GCODE_STATE NAME=save_state
        {% endif %}
	{% endif%}
	G90
	G1 X{defaultcfg.park_x|int} Y{defaultcfg.park_y|int} F{defaultcfg.park_speed|int}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
    {% set defaultcfg = printer['gcode_macro _defaultcfg'] %} ; get defaultcfg variables
    {% set config = printer.configfile.settings %} ; get realtime configfile settings
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = defaultcfg.park_x|int %}
    {% set y_park = defaultcfg.park_y|int %}
    {% set z_park_delta = 2.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - z_park_delta) %}
        {% set z_safe = z_park_delta %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
        M83
        G1 E-{defaultcfg.park_extrude} F2100
        {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
    {% else %}
        M{defaultcfg.output|int} Extruder not hot enough
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
        G91
        {% if printer.toolhead.position.z|float + defaultcfg.park_z|float < config["stepper_z"]["position_max"]|float %}
            {% if  printer.toolhead.position.z < defaultcfg.park_zmin|int %}
                G1 Z{defaultcfg.park_zmin|int-printer.toolhead.position.z|int}
            {% else %}
                SAVE_GCODE_STATE NAME=save_state
                G1 Z{defaultcfg.park_z|int}
                RESTORE_GCODE_STATE NAME=save_state
            {% endif %}
        {% endif%}
        G90
        G1 X{defaultcfg.park_x|int} Y{defaultcfg.park_y|int} F{defaultcfg.park_speed|int}
        {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
    {% else %}
        M{defaultcfg.output|int} Printer not homed
    {% endif %}

################################
########### HOMING #############
################################
# Only home if not homed
[gcode_macro HOME_IF_NEEDED]
gcode:
    {% set defaultcfg = printer['gcode_macro _defaultcfg'] %} ; get defaultcfg variables
    {% if printer.toolhead.homed_axes != "xyz" %}
        M{defaultcfg.output|int} Homing axis
        G28
    {% endif %}

    