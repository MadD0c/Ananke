###############################
####### CHANGE_FILAMENT ########
################################
[gcode_macro CHANGE_FILAMENT]
description: Change the filament in toolhead
gcode:
    {% set defaultcfg = printer['gcode_macro _defaultcfg'] %} ; get defaultcfg variables
    HOME_IF_NEEDED
    SET_GCODE_VARIABLE MACRO=_defaultcfg VARIABLE=m600_coldstart VALUE=True
    M{defaultcfg.output|int} Filament Change
    M600
    UNLOAD_FILAMENT
    {% if defaultcfg.auto_filament_sensor == True %}
        ENABLEFILAMENTSENSOR
    {% endif %}

################################
####### FILAMENT_RUNOUT ########
################################
[gcode_macro FILAMENT_RUNOUT]
description: Procedure when Filament Runout Sensor is triggered
gcode:
    {% set defaultcfg = printer['gcode_macro _defaultcfg'] %} ; get defaultcfg variables
    {% set cachevar = printer['gcode_macro _cachevar'] %} ; get defaultcfg variables
    {% if cachevar.m600_coldstart == False %}
        M{defaultcfg.output|int} Filament Runout
        {% if defaultcfg.use_telegram == True %}
            {defaultcfg.telegram_runout}
        {% endif %}
        SET_IDLE_TIMEOUT TIMEOUT=3600
        {% if defaultcfg.audio_status == True %}
            {defaultcfg.m600_audio}
            ALERT_BEEP_ON
        {% endif %}
        M600
        SET_GCODE_VARIABLE MACRO=_cachevar VARIABLE=m600_prev_temp VALUE={printer.extruder.target}
        SET_GCODE_VARIABLE MACRO=_cachevar VARIABLE=runout VALUE=True
        {% if defaultcfg.auto_unload == True %}
            M{defaultcfg.output|int} Unloading Filament...
            UNLOAD_FILAMENT
        {% else %}
            {% if defaultcfg.use_fluidd == True %}
                {% if defaultcfg.m600_coldstart == False %}
                    M118 Run UNLOAD_FILAMENT to unload.
                    {% if defaultcfg.audio_status == True and defaultcfg.audio_frequency > 0 %}
                        M118 Run ALERT_BEEP_OFF to silence beeper
                    {% endif %}
                {% endif %}
            {% endif %}
            M109 S0
        {% endif %}
    {% endif %}

################################
############ M600 ##############
################################
[gcode_macro OGM600]
gcode:
    {% set defaultcfg = printer['gcode_macro _defaultcfg'] %} ; get defaultcfg variables
    {% set cachevar = printer['gcode_macro _cachevar'] %} ; get defaultcfg variables
    SET_IDLE_TIMEOUT TIMEOUT=7200 ; Increase idle timeout
    {% if printer.idle_timeout.state == "Printing" %}
        PAUSE ; Pause printing
    {% endif %}
    {% if defaultcfg.led_status == True %}
        {defaultcfg.status_m600}
    {% endif %}
    _FILAMENT_PARK
    {% if defaultcfg.audio_status == True %}
        ALERT_BEEP_ON
    {% endif %}
    # Check if this is slicer-initiated
    {% if cachevar.m600_coldstart == False and defaultcfg.runout == False %}
        M{defaultcfg.output|int} Filament Change
        SET_IDLE_TIMEOUT TIMEOUT=3600
        {% if defaultcfg.auto_unload == True %}
            M{defaultcfg.output|int} Unloading Filament...
            UNLOAD_FILAMENT
        {% else %}
            M109 S0
            {% if defaultcfg.use_fluidd == True %}
                {% if cachevar.m600_coldstart == False %}
                    M118 Run UNLOAD_FILAMENT to unload.
                    {% if defaultcfg.audio_status == True and defaultcfg.audio_frequency > 0 %}
                        M118 Run ALERT_BEEP_OFF to silence beeper
                    {% endif %}
                {% endif %}
            {% endif %}
        {% endif %}
    {% endif %}
    # Reset check variable
    SET_GCODE_VARIABLE MACRO=_defaultcfg VARIABLE=runout VALUE=False

################################
####### UNLOAD_FILAMENT ########
################################
[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set defaultcfg = printer['gcode_macro _defaultcfg'] %} ; get defaultcfg variables
    {% set cachevar = printer['gcode_macro _cachevar'] %} ; get defaultcfg variables
    {% set config = printer.configfile.settings %} ; get realtime configfile settings
    {% set LENGTH = params.LENGTH|default(defaultcfg.m600_unload_length)|float %} ; Unload length
    {% set TARGET = params.TARGET|default(defaultcfg.m600_default_temp)|float %} ; Unload temperature
    ##################
    {% if defaultcfg.audio_status == True %}
        ALERT_BEEP_OFF
    {% endif %}
    {% set cur_temp = printer.extruder.temperature|float %} ; Current temperature
    {% set cur_targ = printer.extruder.target|int %}        ; Current target
    {% if config.extruder.min_extrude_temp is defined %}
        {% set min_extrude = config.extruder.min_extrude_temp|int %}
    {% else %}
        {% set min_extrude = 180 %}
    {% endif %}
    {% if cachevar.m600_prev_temp != 0 %}
        {% set TARGET = cachevar.m600_prev_temp %}
    {% elif params.TARGET is defined and params.TARGET|int > min_extrude %} ; If current temp is below target
        {% set TARGET = params.TARGET|int|default(defaultcfg.m600_default_temp) %}
    {% endif %}
    {% if cur_temp < (TARGET-5) %}
        {% if defaultcfg.led_status == True %}
            {defaultcfg.status_heat}
        {% endif %}
        M{defaultcfg.output|int} Heating nozzle...
        M109 S{TARGET} ; Heat nozzle to target temperature
    {% endif %}
    {% if defaultcfg.led_status == True %}
        {defaultcfg.status_unload}
    {% endif %}
    G91 ; Relative positioning
    # Pre-unload to loosen filament
    G1 E5.0 F1200 ; Extrude a bit 
    G1 E3.0 F1600 ; Extrude a bit
    G1 E-6.67 F7000 ; pull hard
    G1 E5.0 F2000 ; Extrude a bit harder
    G1 E-6.67 F3500 ; pull less hard
    # Unload
    G1 E-{LENGTH} F{defaultcfg.m600_fast_speed|int}
    G90 ; Absolute postitioning
    M400
    {% if defaultcfg.auto_filament_sensor == True %}
        ENABLEFILAMENTSENSOR
    {% endif %}
    M{defaultcfg.output|int} Unload Complete
    {% if defaultcfg.led_status == True %}
        {defaultcfg.status_busy}
    {% endif %}
    {% if defaultcfg.use_fluidd == True %}
        {% if defaultcfg.auto_load == False %}
            M118 Run LOAD_FILAMENT to load.
        {% endif %}
    {% endif %}

################################
####### INSERT_FILAMENT ########
################################
[gcode_macro _INSERT_FILAMENT]
gcode:
    {% set defaultcfg = printer["gcode_macro _defaultcfg"] %}
    M{defaultcfg.output|int} Filament Detected!
    {% if defaultcfg.auto_load == True %}
        LOAD_FILAMENT
    {% endif %}


################################
######## LOAD_FILAMENT #########
################################
[gcode_macro LOAD_FILAMENT]
gcode:
    {% set defaultcfg = printer['gcode_macro _defaultcfg'] %} ; get defaultcfg variables
    {% set config = printer.configfile.settings %} ; get realtime configfile settings
    {% set cachevar = printer['gcode_macro _cachevar'] %} ; get defaultcfg variables
    {% set SLOW = params.SLOW|default(defaultcfg.m600_load_slow)|float %} ; Purge amount
    {% set FAST = params.FAST|default(defaultcfg.m600_load_fast)|float %} ; Load length
    ##################
    {% set cur_temp = printer.extruder.temperature|float %} ; Current temperature
    {% set cur_targ = printer.extruder.target|int %}        ; Current target
    {% if config.extruder.min_extrude_temp is defined %}
        {% set min_extrude = config.extruder.min_extrude_temp|int %}
    {% else %}
        {% set min_extrude = 180 %}
    {% endif %}
    {% if cachevar.m600_prev_temp != 0 %}
        {% set TARGET = cachevar.m600_prev_temp %}
    {% elif params.TARGET is defined and params.TARGET|int > min_extrude %} ; If current temp is below target
        {% set TARGET = params.TARGET|int|default(220) %}
    {% else %}
        {% set TARGET = 220 %}
    {% endif %}
    {% if printer.extruder.target < min_extrude %} ; Verify extruder is hot enough
        {% set TARGET = defaultcfg.m600_default_temp %} ; Heat up to default temp
    {% else %}
        {% set TARGET = printer.extruder.target %}
    {% endif %}
    {% if cur_temp < (TARGET-5) %}
        {% if defaultcfg.led_status == True %}
            {defaultcfg.status_heat}
        {% endif %}
        M{defaultcfg.output|int} Heating nozzle...
        M109 S{TARGET} ; Heat nozzle to target temperature
    {% endif %}
    {% if defaultcfg.led_status == True %}
        {defaultcfg.status_load}
    {% endif %}
    M{defaultcfg.output|int}  LOADING...
    G91 ; Relative positioning
    G1 E25.0 F{defaultcfg.m600_med_speed|int} ; pre-load
    G1 E{FAST} F{defaultcfg.m600_fast_speed|int} ; load up to hotend
    G4 P900 ; wait a moment
    G1 E{SLOW} F{defaultcfg.m600_slow_speed|int} ; purge to change filament
    G90 ; Absolute postitioning
    M400
    {% if defaultcfg.coldstart == True %}
        M{defaultcfg.output|int} Cooling nozzle...
        M109 S0
        {% if defaultcfg.auto_sensor == True %}
            DISABLEFILAMENTSENSOR
        {% endif %}
    {% endif %}
    SET_GCODE_VARIABLE MACRO=_cachevar VARIABLE=m600_prev_temp VALUE=0
    SET_IDLE_TIMEOUT TIMEOUT=900 ; Return idle timeout to normal
    {% if defaultcfg.audio_status == True %}
        CHANGE_TUNE
    {% endif %}
    M{defaultcfg.output|int} Load Complete
    {% if defaultcfg.led_status == True %}
        STATUS_READY
    {% endif %}
    {% if defaultcfg.clean_nozzle == True %}
        M{defaultcfg.output|int} Cleaning nozzle..
        {defaultcfg.clean_macro}
    {% endif %}
    {% if defaultcfg.coldstart == False %}
        {% if defaultcfg.use_fluidd == True %}
            {% if defaultcfg.m600_coldstart == False %}
                M118 You may now RESUME the print.
            {% endif %}
        {% endif %}
    {% endif %}
    SET_GCODE_VARIABLE MACRO=_defaultcfg VARIABLE=coldstart VALUE=False

################################
############ PURGE #############
################################
[gcode_macro PURGE]
gcode:
    {% set defaultcfg = printer['gcode_macro _defaultcfg'] %} ; get defaultcfg variables
    {% set cachevar = printer['gcode_macro _cachevar'] %} ; get defaultcfg variables
    {% set config = printer.configfile.settings %} ; get realtime configfile settings
    {% set LENGTH = params.LENGTH|default(defaultcfg.m600_purge_length)|float %} ; Purge length
    ##################
    {% set cur_temp = printer.extruder.temperature|float %} ; Current temperature
    {% set cur_targ = printer.extruder.target|int %}        ; Current target
    {% if cachevar.m600_prev_temp != 0 %}
        {% set TARGET = cachevar.m600_prev_temp %}
    {% elif params.TARGET is defined  %} ; If current temp is below target
        {% set TARGET = params.TARGET|int %}
    {% endif %}
    {% if printer.extruder.target < config.extruder.min_extrude_temp|int %} ; Verify extruder is hot enough
        {% set TARGET = defaultcfg.m600_default_temp %} ; Heat up to default temp
    {% endif %}
    {% if defaultcfg.led_status == True %}
        {defaultcfg.status_heat}
    {% endif %}
    M{defaultcfg.output|int} Heating nozzle...
    M109 S{TARGET} ; Heat nozzle to target temperature
    {% if defaultcfg.led_status == True %}
        {defaultcfg.status_load}
    {% endif %}
    M{defaultcfg.output|int} PURGING..
    G91 ; Relative positioning
    G1 E{LENGTH} F{defaultcfg.m600_slow_speed|int} ; Purge filament
    G90 ; Absolute postitioning
    M400
    M109 S{cur_targ} ; Return target temp to previous value
    M{defaultcfg.output|int} Purge Complete
    {% if defaultcfg.led_status == True %}
        {defaultcfg.status_ready}
    {% endif %}


################################
#### FILAMENT SENSOR CONTROL####
################################
# Disable filament sensor at startup
[delayed_gcode AUTO_DISABLEFILAMENTSENSOR]
initial_duration: 1
gcode:
    {% set defaultcfg = printer['gcode_macro _defaultcfg'] %}
    {% if defaultcfg.auto_filament_sensor == True %} ; If automated sensor feature is enabled
        SET_FILAMENT_SENSOR SENSOR={defaultcfg.filament_sensor} ENABLE=0 ; Disable sensor
    {% endif %}
# Enable filament sensor
[gcode_macro ENABLEFILAMENTSENSOR]
description: Activates filament sensor   
gcode:
    {% set defaultcfg = printer['gcode_macro _defaultcfg'] %}
    {% set SENSOR = params.SENSOR|default(defaultcfg.filament_sensor) %} ; get sensor
    M{defaultcfg.output|int} Enabling filament sensor
    SET_FILAMENT_SENSOR SENSOR={SENSOR} ENABLE=1
# Disable filament sensor
[gcode_macro DISABLEFILAMENTSENSOR]
description: Deactivates filament sensor
gcode:
    {% set defaultcfg = printer['gcode_macro _defaultcfg'] %}
    {% set SENSOR = params.SENSOR|default(defaultcfg.filament_sensor) %} ; get sensor
    M{defaultcfg.output|int} Disabling filament sensor
    SET_FILAMENT_SENSOR SENSOR={SENSOR} ENABLE=0

